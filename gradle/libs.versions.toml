[versions]
kotlin = "1.9.22"
kotlinx-datetime = "0.5.0"
kotlinx-serialization = "1.6.3"
binaryCompabilityValidator = "0.13.2"
openapi-generator = "7.3.0"
crowdproj-generator = "0.2.0"
coroutines = "1.8.0"
kermit = "2.0.3"
ktor = "2.3.9"

# Docker
testcontainers = "1.19.7"
muschko = "9.4.0"

# BASE
jvm-compiler = "11"
jvm-language = "17"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-binaryCompatibilityValidator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "binaryCompabilityValidator" }
kotlinx-datetime = {module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime"}
kotlinx-serialization-core = {module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization"}
kotlinx-serialization-json = {module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization"}
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# Ktor
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-headers-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-headers-caching = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-headers-default = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-calllogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-websocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-test = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

[plugins]
kotlin-multiplatform = {id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
kotlin-jvm = {id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
openapi-generator = {id = "org.openapi.generator", version.ref = "openapi-generator"}
crowdproj-generator = {id = "com.crowdproj.generator", version.ref = "crowdproj-generator"}
kotlinx-serialization = {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}

# Ktor
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

# Docker
muschko-remote = { id = "com.bmuschko.docker-remote-api", version.ref = "muschko" }
muschko-java = { id = "com.bmuschko.docker-java-application", version.ref = "muschko" }